# -*- coding: utf-8 -*-
"""ARCGIS_CNN_ImageClassfication_PreTrained_MobileNet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PecK92fOCgv_BWdrPqbloCjrkF3412Wr
"""

#pip install arcgis==1.8.4

#pip install tensorflow_hub

from keras.models import  Sequential
from keras import models, layers
import tensorflow as tf
from keras.layers import Flatten, Dense, Conv2D, MaxPooling2D
import matplotlib.pyplot as plt
import numpy as np
from tensorflow.keras import datasets
from keras.layers.core.activation import Activation
from sklearn.metrics import classification_report, confusion_matrix
import tensorflow_hub as hub
import PIL.Image as Image

classifyImage = tf.keras.Sequential([
    hub.KerasLayer('https://tfhub.dev/google/tf2-preview/mobilenet_v2/classification/4', input_shape=(224,224,3))
])

image = Image.open('/content/sample_data/Falcon9_1.jpg').resize((224,224))
  image

image =  np.array(image)
image

image.shape

image = image / 255
image
#Normalised Image

image[np.newaxis,...].shape

image.shape

classifyImage.predict(image[np.newaxis,...])

# THE PRETRAINED MODEL GAVE THE OUTPUT AS BELOW FOR ROCKET IMAGE
# MEANIGN OUT OF 1000 CLASSES FROM THE PRETRAINED MODEL IT GAVE PROBABILITY VALUES OF THE IMAGE BELONGING TO A PARTICULAR CLASS
# CLASS 0 = 0.22717223, CLASS 1 = 0.06404608, CLASS 2 = -0.07991119
# array([[ 0.22717223,  0.06404608, -0.07991119, ..., -0.5489298 ,
        -0.05152136, -0.33651674]], dtype=float32)

modelResult = classifyImage.predict(image[np.newaxis,...])
modelResult.shape

#get the max result, meaning which class has the max value which can categorise the IMAGE GIVEN as INPUT
resultCategoryIndex_INClass =  np.argmax(modelResult)
resultCategoryIndex_INClass
# THE VALUE IS THE INDEX IN THE CLASS CATEGORY

listLabel = []
with open("/content/sample_data/ImageNetLabels.txt","r") as f:
  listLabel = f.read().splitlines()

listLabel[resultCategoryIndex_INClass]